1. Polymorphism - 

    Poly means many and morphism means forms or behaviour

    Runtime Polymorphism - Method over-riding 
    Compile Time Polymorphism - Method overloading

2. Input from user - 

    * Using Scanner class -  

        Scanner sc = new Scanner(System.in);
        System.out.println("Enter something");
        String input = sc.next();

    * Using BufferedReader class - 

        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Enter something");
        String input = reader.readLine();

        *BufferedReader class reads input in string format and requires further parsing

3. JDK vs JRE vs JIT vs JVM -

    JVM (Java Virtual Machine) - 
        It provides environment to execute java byte code i.e .class file
        
        JVM - Loads the bytecode
              Verifies and interprets the bytecode
              Executes the program

        * JVM is platform dependent, but the bytecode generated by the compiler is platform independent,
          thus making Java as platform independent
    
    JIT (Just in time compiler) - 

        JIT is a part of JVM which converts the frequently executed bytecode into native machine code at
        runtime to speed up execution
    
    JRE (Java Runtime Environment) - 

        JRE provides environment to run Java applications
        It includes -
            JVM for running bytecode
            Libraries - Essential Java Libraries like java.util , java.lang etc

    JDK (Java Development Kit) - 
        It is a software development kit used for developing java applications
        It includes - 
         JVM for running bytecode
         Libraries - Essential Java Libraries like java.util , java.lang etc
         Development tools Z( Compiler , Debugger)

    JVM - Executes bytecode
    JIT - part of JVM to optimize performance
    JRE - JVM + Libraries
    JDK - JRE + Development tools ( Compiler , Debugger)